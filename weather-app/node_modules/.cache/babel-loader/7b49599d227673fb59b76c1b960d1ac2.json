{"ast":null,"code":"var _jsxFileName = \"/home/dci/Documents/DCI/fbw47-2/Denemelerim/Weather-app/weather-app/src/components/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather(weatherData) {\n  _s();\n\n  const [description, setDescription] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [maxTemp, setMaxTemp] = useState(\"\");\n  const [minTemp, setMinTemp] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  setDescription(weatherData.weather[0].description);\n  setMaxTemp(Math.floor(weatherData.main.temp_max - 273.25));\n  setMinTemp(Math.floor(weatherData.main.temp_min - 273.25));\n  setHumidity(weatherData.main.humidity);\n  setTemp(Math.floor(weatherData.main.temp - 273.15));\n  setCountry(`${weatherData.name}, ${weatherData.sys.country}`);\n\n  const getCurrentDate = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cards mt-5\",\n      style: {\n        width: \"30rem\",\n        visibility: isVisible ? \"visible\" : \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mt-3\",\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-center \",\n        children: getCurrentDate(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"cardBody text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"wi wi-day-sunny display-1 mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", temp, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"cardBody2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"max: \", maxTemp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"min: \", minTemp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"humidity: \", humidity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"+i2MwpeV9B5o6U2R5UDmWb1qfkE=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/home/dci/Documents/DCI/fbw47-2/Denemelerim/Weather-app/weather-app/src/components/Weather.js"],"names":["React","useState","Card","Weather","weatherData","description","setDescription","temp","setTemp","maxTemp","setMaxTemp","minTemp","setMinTemp","humidity","setHumidity","country","setCountry","weather","Math","floor","main","temp_max","temp_min","name","sys","getCurrentDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","width","visibility","isVisible","Date"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Card} from \"react-bootstrap\";\n\nfunction Weather(weatherData,) {\n    const [description,setDescription] = useState(\"\");\n    const [temp,setTemp] = useState(\"\");\n    const [maxTemp, setMaxTemp] = useState(\"\");\n    const [minTemp, setMinTemp] = useState(\"\");\n    const [humidity,setHumidity] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n\n\n   setDescription(weatherData.weather[0].description);\n   setMaxTemp(Math.floor(weatherData.main.temp_max - 273.25));\n   setMinTemp(Math.floor(weatherData.main.temp_min - 273.25));\n   setHumidity(weatherData.main.humidity);\n   setTemp(Math.floor(weatherData.main.temp - 273.15));\n   setCountry(`${weatherData.name}, ${weatherData.sys.country}`);\n  \n    const getCurrentDate =(d)=>{\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month= months[d.getMonth()];\n    let year = d.getFullYear();\n     \n    return `${day} ${date} ${month} ${year}`\n  }\n    \n\n    return (\n        <div>\n            <Card className=\"cards mt-5\" style={{width:\"30rem\", visibility: isVisible ? \"visible\" : \"hidden\"}}>\n\n<h3 className=\"text-center mt-3\">{country}</h3>\n<h6 className=\"text-center \">{getCurrentDate(new Date())}</h6>\n<Card.Body className=\"cardBody text-center\">\n  <Card.Text>\n    <i className=\"wi wi-day-sunny display-1 mt-4\"></i>\n  </Card.Text>\n  <Card.Title> <h4>{description}</h4></Card.Title>\n  <Card.Text>\n    <h1> {temp}°</h1>\n  </Card.Text>\n</Card.Body>\n<Card.Body className=\"cardBody2\">\n  <Card.Text>\n    max: {maxTemp}°\n  </Card.Text>\n  <Card.Text>\n    min: {minTemp}°\n  </Card.Text>\n  <Card.Text>\n   humidity: {humidity}\n  </Card.Text>\n</Card.Body>\n</Card>\n        </div>\n    )\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}