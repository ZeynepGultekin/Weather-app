{"ast":null,"code":"var _jsxFileName = \"/home/dci/Documents/DCI/fbw47-2/Denemelerim/Weather-app/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { Card, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"weather-icons/css/weather-icons.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const getCurrentDate = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  }; // const [description,setDescription] = useState(\"\");\n  // const [temp,setTemp] = useState(\"\");\n  // const [maxTemp, setMaxTemp] = useState(\"\");\n  // const [minTemp, setMinTemp] = useState(\"\");\n  // const [humidity,setHumidity] = useState(\"\");\n  // const [country, setCountry] = useState(\"\");\n\n\n  const [weatherData, setWeatherData] = useState({});\n  const [inputCity, setInputCity] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n  const API_key = \"223c292e1bb3d05f5ed0eb30034a0c0b\";\n  const url = `http://api.openweathermap.org/data/2.5/weather?q=${inputCity}&appid=${API_key}`;\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const weatherApi = await fetch(url);\n    const weatherApiJson = await weatherApi.json();\n    console.log(weatherApiJson);\n    setWeatherData(weatherApiJson);\n    setInputCity(\"\");\n    setIsVisible(true); //  setDescription(weatherApiJson.weather[0].description);\n    //  setMaxTemp(Math.floor(weatherApiJson.main.temp_max - 273.25));\n    //  setMinTemp(Math.floor(weatherApiJson.main.temp_min - 273.25));\n    //  setHumidity(weatherApiJson.main.humidity);\n    //  setTemp(Math.floor(weatherApiJson.main.temp - 273.15));\n    //  setCountry(`${weatherApiJson.name}, ${weatherApiJson.sys.country}`);\n  };\n\n  const inputHandler = e => {\n    setInputCity(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \" text-center mt-5\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3 inputGroup\",\n      style: {\n        width: \"30rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"City name..\",\n        \"aria-label\": \"City name\",\n        \"aria-describedby\": \"basic-addon2\",\n        onChange: inputHandler,\n        value: inputCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: submitHandler,\n        variant: \"outline-secondary\",\n        id: \"button-addon2\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !weatherData.name ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center\",\n        children: \"\\\"Please write a city name\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cards mt-5\",\n        style: {\n          width: \"30rem\",\n          visibility: isVisible ? \"visible\" : \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center mt-3 m-1 \",\n            children: weatherData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center mt-3 m-1\",\n            children: weatherData.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-center \",\n          children: getCurrentDate(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"cardBody text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"wi wi-day-sunny display-1 mt-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: weatherData.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\" \", Math.floor(weatherData.main.temp - 273.15), \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"cardBody2\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"max: \", Math.floor(weatherData.main.temp_max - 273.15), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"min: \", Math.floor(weatherData.main.temp_min - 273.15), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"humidity: \", weatherData.main.humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F8d+Ms7EMU6vX+Op3AhcO2Kx+RI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dci/Documents/DCI/fbw47-2/Denemelerim/Weather-app/weather-app/src/App.js"],"names":["useState","Card","Button","InputGroup","FormControl","App","getCurrentDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","weatherData","setWeatherData","inputCity","setInputCity","isVisible","setIsVisible","API_key","url","submitHandler","e","preventDefault","weatherApi","fetch","weatherApiJson","json","console","log","inputHandler","target","value","width","name","visibility","sys","country","Date","weather","description","Math","floor","main","temp","temp_max","temp_min","humidity"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport {Card, Button,InputGroup, FormControl} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"weather-icons/css/weather-icons.min.css\";\n\nfunction App() {\n\n  const getCurrentDate =(d)=>{\n\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month= months[d.getMonth()];\n    let year = d.getFullYear();\n     \n    return `${day} ${date} ${month} ${year}`\n  }\n\n\n  // const [description,setDescription] = useState(\"\");\n  // const [temp,setTemp] = useState(\"\");\n  // const [maxTemp, setMaxTemp] = useState(\"\");\n  // const [minTemp, setMinTemp] = useState(\"\");\n  // const [humidity,setHumidity] = useState(\"\");\n  // const [country, setCountry] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n  const [inputCity,setInputCity] = useState(\"\");\n  const [isVisible, setIsVisible] = useState(false);\n  \n\n  const API_key = \"223c292e1bb3d05f5ed0eb30034a0c0b\";\n  const url = (`http://api.openweathermap.org/data/2.5/weather?q=${inputCity}&appid=${API_key}`)\n \n  const submitHandler = async (e)=>{\n   e.preventDefault();\n\n   const weatherApi = await fetch(url);\n   const weatherApiJson = await weatherApi.json();\n   console.log(weatherApiJson);\n   setWeatherData(weatherApiJson);\n   setInputCity(\"\");\n   setIsVisible(true);\n   \n  \n  //  setDescription(weatherApiJson.weather[0].description);\n  //  setMaxTemp(Math.floor(weatherApiJson.main.temp_max - 273.25));\n  //  setMinTemp(Math.floor(weatherApiJson.main.temp_min - 273.25));\n  //  setHumidity(weatherApiJson.main.humidity);\n  //  setTemp(Math.floor(weatherApiJson.main.temp - 273.15));\n  //  setCountry(`${weatherApiJson.name}, ${weatherApiJson.sys.country}`);\n\n   \n };\n const inputHandler = (e)=>{\n   setInputCity(e.target.value);\n\n }\n  return (\n    <div className=\"container\" >\n      <h1 className=\" text-center mt-5\">Weather App</h1>\n      <InputGroup className=\"mb-3 inputGroup\" style={{width:\"30rem\"}}  >\n        <FormControl\n          placeholder=\"City name..\"\n          aria-label=\"City name\"\n          aria-describedby=\"basic-addon2\"\n          onChange ={inputHandler}\n          value={inputCity}\n        />\n        <Button type=\"submit\" onClick={submitHandler} variant=\"outline-secondary\" id=\"button-addon2\">\n          Search\n        </Button>\n      </InputGroup>\n      \n        < >\n        {!weatherData.name ?(\n          <h4 className=\"text-center\">\"Please write a city name\"</h4>\n          \n        ): (\n          <Card className=\"cards mt-5\" style={{width:\"30rem\", visibility: isVisible ? \"visible\" : \"hidden\"}}>\n            <div className=\"d-flex justify-content-center\">\n        <h3 className=\"text-center mt-3 m-1 \">{ weatherData.name}</h3>\n        <h3 className=\"text-center mt-3 m-1\">{weatherData.sys.country}</h3>\n        </div>\n        <h6 className=\"text-center \">{getCurrentDate(new Date())}</h6>\n        <Card.Body className=\"cardBody text-center\">\n          <Card.Text>\n            <i className=\"wi wi-day-sunny display-1 mt-4\"></i>\n          </Card.Text>\n          <Card.Title> <h4>{weatherData.weather[0].description}</h4></Card.Title>\n          <Card.Text>\n            <h1> {Math.floor(weatherData.main.temp - 273.15)}°</h1>\n          </Card.Text>\n        </Card.Body>\n        <Card.Body className=\"cardBody2\">\n          <Card.Text>\n            max: {Math.floor(weatherData.main.temp_max - 273.15)}°\n          </Card.Text>\n          <Card.Text>\n            min: {Math.floor(weatherData.main.temp_min - 273.15)}°\n          </Card.Text>\n          <Card.Text>\n           humidity: {weatherData.main.humidity}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n        )}\n        </>\n     \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}