{"ast":null,"code":"var _jsxFileName = \"/home/dci/Documents/DCI/fbw47-2/weather_deneme/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { WeatherApi } from \"./Api/Data.js\";\nimport { Card, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputCity, setInputCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n  const [isVisible, setIsVisible] = useState(false);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n  };\n\n  const inputHandler = e => {\n    setInputCity(e.target.value);\n  };\n\n  console.log(WeatherApi.name);\n  const API_key = \"223c292e1bb3d05f5ed0eb30034a0c0b\";\n  useEffect(() => {\n    WeatherApi(inputCity, API_key).then(data => setWeatherData(data));\n  }, []);\n\n  const getCurrentDate = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \" text-center mt-5\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3 inputGroup\",\n      style: {\n        width: \"30rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"City name..\",\n        \"aria-label\": \"City name\",\n        \"aria-describedby\": \"basic-addon2\",\n        onChange: inputHandler,\n        value: inputCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: submitHandler,\n        variant: \"outline-secondary\",\n        id: \"button-addon2\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cards mt-5\",\n      style: {\n        width: \"30rem\",\n        visibility: isVisible ? \"visible\" : \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mt-3\",\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"text-center \",\n        children: getCurrentDate(new Date())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"cardBody text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"wi wi-day-sunny display-1 mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: weatherData.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", Math.floor(weatherData.main.temp - 273.15), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"cardBody2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"max: \", Math.floor(weatherData.main.temp_max - 273.15), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"min: \", Math.floor(weatherData.main.temp_min - 273.15), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"humidity: \", weathe]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"STIm5uaRkyxHorKrRDUDkrHOxus=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dci/Documents/DCI/fbw47-2/weather_deneme/weather-app/src/App.js"],"names":["React","useState","useEffect","WeatherApi","Card","Button","InputGroup","FormControl","App","inputCity","setInputCity","weatherData","setWeatherData","isVisible","setIsVisible","submitHandler","e","preventDefault","inputHandler","target","value","console","log","name","API_key","then","data","getCurrentDate","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","width","visibility","Date","weather","description","Math","floor","main","temp","temp_max","temp_min","weathe"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport {WeatherApi} from \"./Api/Data.js\";\nimport {Card, Button,InputGroup, FormControl} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [inputCity,setInputCity] = useState(\"\");\n  const [weatherData, setWeatherData] = useState({});\n  const [isVisible, setIsVisible] = useState(false);\n\n  const submitHandler = async (e)=>{\n   e.preventDefault();\n  }\n  const inputHandler = (e)=>{\n       setInputCity(e.target.value);\n  }\n  console.log(WeatherApi.name)\n  const API_key = \"223c292e1bb3d05f5ed0eb30034a0c0b\";\n\n  useEffect(()=>{\n    WeatherApi(inputCity, API_key).then(\n      (data) =>setWeatherData(data)\n    )\n  }, [])\n\n  const getCurrentDate =(d)=>{\n\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        \n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month= months[d.getMonth()];\n        let year = d.getFullYear();\n         \n        return `${day} ${date} ${month} ${year}`\n      }\n\n  return (\n    <div className=\"container\" >\n      <h1 className=\" text-center mt-5\">Weather App</h1>\n      <InputGroup className=\"mb-3 inputGroup\" style={{width:\"30rem\"}}  >\n         <FormControl\n          placeholder=\"City name..\"\n          aria-label=\"City name\"\n          aria-describedby=\"basic-addon2\"\n          onChange ={inputHandler}\n          value={inputCity}\n        />\n        <Button type=\"submit\" onClick={submitHandler} variant=\"outline-secondary\" id=\"button-addon2\">\n          Search\n        </Button>\n      </InputGroup>\n      <Card className=\"cards mt-5\" style={{width:\"30rem\", visibility: isVisible ? \"visible\" : \"hidden\"}}>\n\n       <h3 className=\"text-center mt-3\">{weatherData.name}</h3>\n         <h6 className=\"text-center \">{getCurrentDate(new Date())}</h6>\n         <Card.Body className=\"cardBody text-center\">\n           <Card.Text>\n             <i className=\"wi wi-day-sunny display-1 mt-4\"></i>\n          </Card.Text>\n          <Card.Title> <h4>{weatherData.weather[0].description}</h4></Card.Title>\n           <Card.Text>\n            <h1> {Math.floor(weatherData.main.temp - 273.15)}°</h1>\n          </Card.Text>\n        </Card.Body>\n        <Card.Body className=\"cardBody2\">\n          <Card.Text>\n             max: {Math.floor(weatherData.main.temp_max - 273.15)}°\n           </Card.Text>\n           <Card.Text>\n             min: {Math.floor(weatherData.main.temp_min - 273.15)}°\n           </Card.Text>\n           <Card.Text>\n            humidity: {weathe}\n           </Card.Text>\n         </Card.Body>\n       </Card>\n      \n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}